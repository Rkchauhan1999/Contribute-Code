package com.interview.interview;

import java.util.Scanner;

public class PrimePattern {
	public static boolean isPrimeNumber(int num) {
		int c = 0;
		for (int i = 1; i <= num; i++) {
			if (num % i == 0)
				c++;
		}
		if (c == 2) {
			return true;
		} else {
			return false;
		}
	}

	public static void main(String[] args) {

		int rows=5;
		int counter = 2;
		for (int i = 1; i <= rows; i++) {
			for (int j = 1; j <= i; j++) {
//Try to find next prime number by incrementing counter and testing it for primality
				while (!isPrimeNumber(counter)) {
					counter++;
				}
				System.out.print(counter + " ");
				counter++;
			}
 			System.out.println();
		}
	}

}
[8:01 am, 11/01/2023] Rk Chauhan⚔️⚔️⚔️: package Numbers;

import java.io.IOException;
import java.util.Scanner;
import java.util.regex.Pattern;

public class AllPattern {

	public static void myPattern(int n)  {

		for (int i = 0; i <= n; i++) {
			for (int j = n; j > i; j--) {
				System.out.print(" ");
			}

			for (int k = 0; k <= i; k++) {
				System.out.print("* ");
			}
			System.out.println();
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j <= i; j++) {
				System.out.print(" ");
			}

			for (int k = n; k > i; k--) {
				System.out.print("* ");
			}
			System.out.println();
		}
	}

	public static void myPattern2(int n) {

		for (int i = 0; i < n; i++) {

			for (int j = 0; j < n; j++) {
				if ((j == 0 || j == n - 1) || (i == 0 || i == n - 1)) {
					System.out.print("* ");
				} else {
					System.out.print("  ");
				}
			}
			System.out.println();
		}
	}

	public static void Pattern3(int n) {

		for (int i = n; i >= -n; i--) {
			for (int j = 0; j < Math.abs(i); j++) {
				System.out.print(" ");
			}

			for (int k = n; k >= Math.abs(i); k--) {
				System.out.print("* ");
			}
			System.out.println();
		}
	}

	public static void Pattern4(int n) {

		for (int i = n; i >= -n; i--) {
			for (int j = 0; j < Math.abs(i); j++) {
				System.out.print(" ");
			}

			for (int k = n; k >= Math.abs(i); k--) {
				System.out.print("* ");
			}
			System.out.println();
		}
	}

	public static void Pattern5(int n) {

		for (int i = n; i >= -n; i--) {
			for (int j = 0; j < Math.abs(i); j++) {
				System.out.print(" ");
			}

			for (int k = n; k >= Math.abs(i); k--) {
				System.out.print("*");
			}
			System.out.println();
		}
	}

	public static void Pattern6(int n) {

		for (int i = n; i >= -n; i--) {
			for (int j = 0; j < Math.abs(i); j++) {
				System.out.print(" ");
			}

			for (int k = n; k >= Math.abs(i); k--) {
				System.out.print("* ");
			}
			System.out.println();
		}
	}

	public static void Pattern7(int n) {
		System.out.println("Pattern No : 07");
		for (int i = n; i >= -n; i--) {
			for (int j = n; j > Math.abs(i); j--) {
				System.out.print(" ");
			}

			for (int k = 0; k <= Math.abs(i); k++) {
				System.out.print("* ");
			}
			System.out.println();
		}
	}

	public static void Pattern8(int n) {

		System.out.println("Pattern No : 08");
		for (int i = n; i >= -n; i--) {
			for (int j = 0; j <= Math.abs(i); j++) {
				System.out.print(" ");
			}

			for (int k = 0; k < 1; k++) {
				System.out.print("* ");
			}
			System.out.println();
		}
	}

	public static void Pattern9(int n) {
		System.out.println("Pattern No : 09");

		for (int i = 0; i < n; i++) {
			for (int j = n; j >= i; j--) {
				System.out.print(" ");
			}
			for (int j = 0; j <= i; j++) {
				System.out.print("* ");
			}

			System.out.println();
		}
	}

	public static void Pattern10(int n) {
		System.out.println("Pattern No : 10");

		for (int i = 0; i < n; i++) {
			for (int j = n; j > i; j--) {
				System.out.print(" ");
			}
			int num = 1;
			for (int k = 0; k <= i; k++) {
				System.out.print(num + " ");
				num = num * (i - k) / (k + 1);

			}

			System.out.println();
		}
	}

	public static void printPascal(int n) {
		for (int line = 1; line <= n; line++) {
			for (int j = 0; j <= n - line; j++) {
				System.out.print(" ");
			}
			int C = 1;
			for (int i = 1; i <= line; i++) {

				System.out.print(C + " ");
				C = C * (line - i) / i;
			}
			System.out.println();
		}
	}

	public static void Pattern11(int n) {
		System.out.println("Pattern No : 11");
		int x = 0;
		for (int i = 1; i <= n; i++) {
			x = i;
			for (int j = 2; j <= i + 1; j++) {
				System.out.print(x + " ");
				x++;
			}
			x -= 2;
			for (int k = 1; k < i; k++) {
				System.out.print(x + " ");
				x--;
			}
			System.out.println();
		}
	}

	public static void Pattern12(int n) {
		System.out.println("Pattern No : 12");
		int i = 1;
		int j;
		int k;
		int x = 0;
		while (i <= n) {
			x = i;
			j = 1;
			while (j <= i) {
				System.out.print(x + " ");
				x++;
				j++;
			}
			k = 1;
			x -= 2;
			while (k < i) {
				System.out.print(x + " ");
				x--;
				k++;
			}
			System.out.println();
			i++;
		}
	}

	public static void Pattern13(int n) {
		System.out.println("Pattern No : 13");
		char ch = 'A';
		for (int i = 1; i <= n; i++) {
			ch = 'A';
			for (int j = n; j >= i; j--) {
				System.out.print(ch);
				ch++;
			}
			System.out.println();
		}
	}

	public static void Pattern14(int n) {
		System.out.println("Pattern No : 14");
		for (int i = 1; i <= n; i++) {
			int num = i;
			for (int j = 1; j <= i; j++) {
				System.out.print(num + " ");
				num = num + n - j;
			}
			System.out.println();
		}
	}

	public static void Pattern15(int n) {
		System.out.println("Pattern No : 15");
		int ch=64;
		int count;
		int num;
		for (int i = 1; i <=n; i++) {
			num=n-1;
			count = i;
			for (int j = 1; j <= i; j++) {
				System.out.print((char)(ch+count) + " ");
				count=count+num;
				num--;
			}
			System.out.println();
		} 
	}

	public static void main(String[] args) {
		int n = 5;
		myPattern(n);
		myPattern2(n);
		Pattern3(n);
		Pattern4(n);
		Pattern5(n);
		Pattern6(n);
		Pattern7(n);
		Pattern8(n);
		Pattern9(n);
		Pattern10(n);
		printPascal(n);
		Pattern11(n);
		Pattern12(n);
		Pattern13(n);
		Pattern14(n);   // VVI
		Pattern15(n);  // VVI
	  
	}

}
     * 
    * * 
   * * * 
  * * * * 
 * * * * * 
* * * * * * 
 * * * * * 
  * * * * 
   * * * 
    * * 
     * 
* * * * * 
*       * 
*       * 
*       * 
* * * * * 
     * 
    * * 
   * * * 
  * * * * 
 * * * * * 
* * * * * * 
 * * * * * 
  * * * * 
   * * * 
    * * 
     * 
     * 
    * * 
   * * * 
  * * * * 
 * * * * * 
* * * * * * 
 * * * * * 
  * * * * 
   * * * 
    * * 
     * 
     *
    **
   *
  **
 ***
**
 ***
  **
   *
    **
     *
     * 
    * * 
   * * * 
  * * * * 
 * * * * * 
* * * * * * 
 * * * * * 
  * * * * 
   * * * 
    * * 
     * 
Pattern No : 07
* * * * * * 
 * * * * * 
  * * * * 
   * * * 
    * * 
     * 
    * * 
   * * * 
  * * * * 
 * * * * * 
* * * * * * 
Pattern No : 08
      * 
     * 
    * 
   * 
  * 
 * 
  * 
   * 
    * 
     * 
      * 
Pattern No : 09
      * 
     * * 
    * * * 
   * * * * 
  * * * * * 
Pattern No : 10
     1 
    1 1 
   1 2 1 
  1 3 3 1 
 1 4 6 4 1 
     1 
    1 1 
   1 2 1 
  1 3 3 1 
 1 4 6 4 1 
Pattern No : 11
1 
2 3 2 
3 4 5 4 3 
4 5 6 7 6 5 4 
5 6 7 8 9 8 7 6 5 
Pattern No : 12
1 
2 3 2 
3 4 5 4 3 
4 5 6 7 6 5 4 
5 6 7 8 9 8 7 6 5 
Pattern No : 13
ABCDE
ABCD
ABC
AB
A
Pattern No : 14
1 
2 6 
3 7 10 
4 8 11 13 
5 9 12 14 15 
Pattern No : 15
A 
B F 
C G J 
D H K M 
E I L N O
